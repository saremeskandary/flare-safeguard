[profile.default]
solc-version = "0.8.25"
evm_version = "london"
src = "contracts"
out = "out"
libs = ["lib"]
fs_permissions = [{ access = "read-write", path = "./" }]
via_ir = true
optimizer = true
optimizer_runs = 200

[profile.release]
via_ir = true
optimizer = true
optimizer_runs = 10000

[profile.debug]
via_ir = false
optimizer = false

[rpc_endpoints]
default_network = "http://127.0.0.1:8545"

mainnet = "https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_API_KEY}"
sepolia = "https://eth-sepolia.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
arbitrum = "https://arb-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
arbitrumSepolia = "https://arb-sepolia.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
optimism = "https://opt-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
optimismSepolia = "https://opt-sepolia.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
polygon = "https://polygon-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
polygonMumbai = "https://polygon-mumbai.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
polygonZkEvm = "https://zkevm-rpc.com"
polygonZkEvmTestnet = "https://rpc.public.zkevm-test.net"
gnosis = "https://rpc.gnosischain.com"
chiado = "https://rpc.chiadochain.net"
base = "https://mainnet.base.org"
baseSepolia = "https://sepolia.base.org"
scrollSepolia = "https://sepolia-rpc.scroll.io"
scroll = "https://rpc.scroll.io"
pgn = "https://rpc.publicgoods.network"
pgnTestnet = "https://sepolia.publicgoods.network"
coston2 = "https://coston2.enosys.global/ext/C/rpc"
songbird = { key = "X", chain = 16, url = "${SONGBIRD_RPC_URL}" }
flare = { key = "X", chain = 16, url = "${FLARE_RPC_URL}" }

localhost = "http://127.0.0.1:8545"

[etherscan]
polygonMumbai = { key = "${ETHERSCAN_API_KEY}" }
sepolia = { key = "${ETHERSCAN_API_KEY}" }

[fmt]
line_length = 120
tab_width = 4
quote_style = "double"
bracket_spacing = true
int_types = "long"

# Enable gas snapshots with: forge snapshot
[gas_reports]
# forge snapshot --match-contract MyContract
# Will generate gas-snapshots/MyContract.md

# Optional: if you're using remappings.txt in your root directory
# Example contents:
# @openzeppelin=lib/openzeppelin-contracts
# @solmate=lib/solmate

# Environment loading (optional - works with `export $(cat .env | xargs)` in dev)
[env]
dotenv = ".env"
